    CREATE TABLE IF NOT EXISTS concurrency_control (
        task_id STRING,
        start_time TIMESTAMP,
        end_time TIMESTAMP
    ) USING DELTA



###Add below code to the beginning of each task’s notebook:


from pyspark.sql import functions as F
import time

_MAX_CONCURRENT_TASKS_ = 4
_WAIT_TIME_ = 20


running_tasks = spark.sql("""
    SELECT COUNT(*) AS running_tasks
    FROM concurrency_control
    WHERE end_time IS NULL
""").collect()[0]["running_tasks"]

if running_tasks >= _MAX_CONCURRENT_TASKS_:
    print(f"Concurrency limit reached. Waiting for a slot...")
    while running_tasks >= _MAX_CONCURRENT_TASKS_
        time.sleep(_WAIT_TIME_) 
        running_tasks = spark.sql("""
            SELECT COUNT(*) AS running_tasks
            FROM concurrency_control
            WHERE end_time IS NULL
        """).collect()[0]["running_tasks"]


task_id = "task_1"  # Replace with a unique task ID
spark.sql(f"""
    INSERT INTO concurrency_control (task_id, start_time)
    VALUES ('{task_id}', current_timestamp())
""")


###Add below code to the end of each task’s notebook:

spark.sql(f"""
    UPDATE concurrency_control
    SET end_time = current_timestamp()
    WHERE task_id = '{task_id}'
""")
