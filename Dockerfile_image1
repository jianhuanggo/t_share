# Use Amazon Linux 2023 as the base image 
FROM amazonlinux:2023 

# Update the system and install Amazon Corretto JDK (Java 11) 
RUN dnf update -y && \ dnf install -y java-11-amazon-corretto && \ dnf clean all 

# Set the default Java version 
ENV JAVA_HOME=/usr/lib/jvm/java-11-amazon-corretto 
ENV PATH=$JAVA_HOME/bin:$PATH 

# Verify Java installation 
RUN java -version 


# Set working directory 
WORKDIR /app 


COPY fusion.jar /app/myapp.jar 

# Command to run the Java application 
# sudo dnf install -y https://dev.mysql.com/get/mysql80-community-release-el9-1.noarch.rpm
# sudo dnf install -y mysql-community-client


CMD ["java", "-jar", "/app/myapp.jar"]



apiVersion: apps/v1
kind: Deployment
metadata:
  name: fusion-app
  labels:
    app: fusion-app
spec:
  replicas: 2  # Adjust as needed
  selector:
    matchLabels:
      app: fusion-app
  template:
    metadata:
      labels:
        app: fusion-app
    spec:
      containers:
        - name: fusion-app
          image: 288377065523.dkr.ecr.us-east-1.amazonaws.com/fusion-app5:latest
          ports:
            - containerPort: 8009
            - containerPort: 8080
            - containerPort: 8081
            - containerPort: 8209
          resources:
            limits:
              cpu: "500m"
              memory: "512Mi"
            requests:
              cpu: "250m"
              memory: "256Mi"
          command: ["java", "-jar", "fusion.jar"]
      imagePullSecrets:
        - name: ecr-registry-secret



apiVersion: v1
kind: Service
metadata:
  name: fusion-app-service
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "external"
spec:
  selector:
    app: fusion-app
  ports:
    - protocol: TCP
      port: 80  # ALB forwards traffic to this port
      targetPort: 8080  # Internal port where the app is running
  type: ClusterIP


apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fusion-app-ingress
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    alb.ingress.kubernetes.io/group.name: fusion-alb
    alb.ingress.kubernetes.io/healthcheck-path: "/health"
    alb.ingress.kubernetes.io/load-balancer-name: "fusion-alb"
spec:
  rules:
    - http:
        paths:
          - path: /fusion
            pathType: Prefix
            backend:
              service:
                name: fusion-app-service
                port:
                  number: 80



kubectl apply -f fusion-deployment.yaml


kubectl apply -f fusion-service.yaml


kubectl apply -f fusion-ingress.yaml
